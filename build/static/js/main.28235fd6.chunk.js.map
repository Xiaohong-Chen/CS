{"version":3,"sources":["logo.svg","serviceWorker.js","services/CourseService.js","components/CourseRowComponent.js","components/CourseTableComponent.js","components/CourseCardComponent.js","components/CourseGridComponent.js","components/NavigationComponent.js","services/ModuleService.js","components/ModuleListComponent.js","containers/ModuleListContainer.js","services/LessonService.js","components/LessonTabsComponent.js","containers/LessonTabsContainer.js","components/TopicPillsComponent.js","services/TopicService.js","containers/TopicPillsContainer.js","components/CourseEditorComponent.js","containers/CourseEditorContainer.js","components/CourseManager.js","reducers/courseReducer.js","reducers/moduleReducer.js","reducers/lessonReducer.js","reducers/topicReducer.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","url","createCourse","newCourse","fetch","method","body","JSON","stringify","headers","then","response","json","findAllCourses","updateCourse","courseId","deleteCourse","CourseRowComponent","state","selected","editCourse","props","course","selectCourse","setState","className","this","to","_id","title","onChange","e","newTitle","target","value","preState","owner","modified","onClick","React","Component","CourseTableComponent","selectedCourse","console","log","width","courses","map","index","CourseCardComponent","src","alt","CourseGridComponent","NavigationComponent","defaultAddedCourse","Date","toDateString","class","href","placeholder","addCourse","coursesURL","modulesURL","newModule","moduleId","ModuleListComponent","modules","createModuleForCourse","editModule","deleteModule","updateModule","editing","event","connect","moduleReducer","courseReducer","dispatch","ModuleService","actualModule","type","status","moduleURL","lessonURL","lesson","lessonId","LessonTabsComponent","lessons","editLesson","updateLesson","deleteLesson","createLessonForModule","key","lessonReducer","LessonService","actualLesson","TopicPillsComponent","topics","createTopicForLesson","editTopic","deleteTopic","updateTopic","topic","lessonUrl","topicUrl","topicId","newTopic","topicReducer","TopicService","actualTopic","CourseEditorComponent","params","findCourseById","findModulesForCourse","findLessonsForModule","findTopicsForLesson","prevProps","prevState","snapshot","ModuleListContainer","LessonTabsContainer","TopicPillsContainer","CourseService","CourseManager","findAllCourse","addedCourse","courseid","filter","c","style","path","exact","component","CourseEditorContainer","initialState","action","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.28235fd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const url = \"http://wbdv-generic-server.herokuapp.com/api/001571524/courses\"\r\n\r\n/*creates a new course instance and adds it to the collection of courses*/\r\nexport const createCourse = (newCourse) => {\r\n    return (\r\n        fetch(url, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(newCourse),\r\n            headers: {\r\n                'content-type': `application/json`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n    )\r\n}\r\n\r\n/*retrieves all course instances as an array of courses*/\r\nexport const findAllCourses = () => {\r\n    return (\r\n        fetch(url)\r\n            .then(response => response.json())\r\n    )\r\n}\r\n\r\n/*retrieves a course instance that matches the id parameter*/\r\nexport const findCourseById = (courseId) => {\r\n    return (\r\n        fetch(`${url}/${courseId}`)\r\n            .then(response => response.json())\r\n    )\r\n}\r\n\r\n/*updates the course instance whose id matches the id parameter. Updates the instance with values in course parameter*/\r\nexport const updateCourse = (courseId, newCourse) => {\r\n    return (\r\n        fetch(`${url}/${courseId}`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(newCourse),\r\n            headers: {\r\n                'content-type': `application/json`\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n    )\r\n}\r\n\r\n/*deletes course instance whose id matches the id parameter*/\r\nexport const deleteCourse = (courseId) => {\r\n    return (\r\n        fetch(`${url}/${courseId}`, {\r\n            method: \"DELETE\"\r\n        })\r\n            .then(response => response.json())\r\n    )\r\n}\r\n\r\nexport default {findCourseById}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass CourseRowComponent extends React.Component {\r\n\r\n    state = {\r\n        selected: false,\r\n        editCourse: this.props.course\r\n    }\r\n\r\n    selectCourse = () => {\r\n        this.setState({selected: !this.state.selected})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <tr className={this.state.selected === true ? \"table-primary\" : \"\"}>\r\n                {\r\n                    !this.state.selected &&\r\n                    <td>\r\n                        <Link to={`/courseEditor/${this.props.course._id}`}>{this.props.course.title}</Link>\r\n\r\n                    </td>\r\n                }\r\n                {\r\n                    this.state.selected &&\r\n                    <td>\r\n                        <input className=\"form-control \"\r\n\r\n                               onChange={\r\n                                   (e) => {\r\n                                       const newTitle = e.target.value\r\n                                       this.setState(preState => (\r\n                                               {editCourse: {...preState.editCourse, title: newTitle}}\r\n                                           )\r\n                                       )\r\n                                   }\r\n                               }\r\n                               value={this.state.editCourse.title}\r\n                        />\r\n                    </td>\r\n                }\r\n                <td>\r\n                    {this.props.course.owner}\r\n                </td>\r\n                <td>\r\n                    {this.props.course.modified}\r\n                </td>\r\n                <td>\r\n                    <div>\r\n\r\n                        {\r\n                            !this.state.selected &&\r\n                            <div>\r\n                                <i className=\"fa fa-pencil fa-2x mx-2 float-right\" onClick={this.selectCourse}/>\r\n                                <i className=\"fa fa-trash fa-2x mx-2 float-right\" onClick={() => {\r\n                                    this.props.deleteCourse(this.props.course._id)\r\n                                }}/>\r\n                            </div>\r\n\r\n                        }\r\n                        {\r\n                            this.state.selected &&\r\n                            <div>\r\n                                <i className=\"fa fa-check-circle fa-2x mx-2 float-right\" onClick={() => {\r\n\r\n                                    this.props.editCourse(this.props.course._id, this.state.editCourse)\r\n                                    this.selectCourse()\r\n                                }}/>\r\n\r\n                            </div>\r\n\r\n                        }\r\n\r\n                    </div>\r\n\r\n\r\n                    {/* <button\r\n                            className=\"btn btn-danger \"\r\n                            onClick={() => this.props.deleteCourse(this.props.course)}>\r\n                            Delete\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => this.setState({editing: true})}>\r\n                            Edit\r\n                        </button>*/}\r\n                </td>\r\n            </tr>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseRowComponent;","import React from \"react\";\r\nimport CourseRowComponent from \"./CourseRowComponent\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass CourseTableComponent extends React.Component {\r\n\r\n    state = {\r\n        selectedCourse: {}\r\n    }\r\n\r\n    render() {\r\n        console.log(\"this.props\", this.props)\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"table-responsive-\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th width=\"40%\">Title</th>\r\n                            <th width=\"20%\">Owned By</th>\r\n                            <th width=\"20%\">Last Modified</th>\r\n                            <th width=\"20%\">\r\n                                <Link to={\"/courseGrid\"}>\r\n                                    <i className=\"fa fa-th fa-2x mx-2 float-right text-dark\"/>\r\n                                </Link>\r\n                                <i className=\"fa fa-sort-alpha-asc fa-2x mx-2 float-right\"></i>\r\n                            </th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.props.courses.map((course, index) =>\r\n                                <CourseRowComponent course={course} index={index} deleteCourse={this.props.deleteCourse}\r\n                                                    editCourse={this.props.editCourse}/>\r\n                            )\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseTableComponent;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass CourseCardComponent extends React.Component {\r\n\r\n    state = {\r\n        selected: false,\r\n        editCourse: this.props.course\r\n    }\r\n\r\n    selectCourse = () => {\r\n        this.setState({selected: !this.state.selected})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"card\">\r\n                <img src=\"https://picsum.photos/300/300\" className=\"card-img-top\" alt=\"...\"/>\r\n                <div className=\"card-body\">\r\n                    {\r\n                        !this.state.selected &&\r\n                        <Link to={`/courseEditor/${this.props.course._id}`}>\r\n                            <h5 className=\"card-title text-info\">{this.props.course.title}</h5>\r\n                        </Link>\r\n                    }\r\n                    {\r\n                        this.state.selected &&\r\n\r\n                        <input className=\"form-control \"\r\n\r\n                               onChange={\r\n                                   (e) => {\r\n                                       const newTitle = e.target.value\r\n                                       this.setState(preState => (\r\n                                               {editCourse: {...preState.editCourse, title: newTitle}}\r\n                                           )\r\n                                       )\r\n                                   }\r\n                               }\r\n                               value={this.state.editCourse.title}\r\n                        />\r\n\r\n                    }\r\n\r\n                    {\r\n                        !this.state.selected &&\r\n                        <p className=\"card-text\">\r\n                            <i className=\"fa fa-trash m-1 float-right\" onClick={() => {\r\n                                this.props.deleteCourse(this.props.course._id)\r\n                            }}/>\r\n                            <i className=\"fa fa-pencil m-1 float-right\" onClick={this.selectCourse}/>\r\n                        </p>\r\n\r\n                    }\r\n                    {\r\n                        this.state.selected &&\r\n                        <p className=\"card-text\">\r\n                            <i className=\"fa fa-check-circle m-1 float-right\" onClick={() => {\r\n\r\n                                this.props.editCourse(this.props.course._id, this.state.editCourse)\r\n                                this.selectCourse()\r\n                            }}/>\r\n\r\n                        </p>\r\n\r\n                    }\r\n\r\n\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <small className=\"text-muted\">\r\n                        Last updated {this.props.course.modified}\r\n                    </small>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseCardComponent;","import React from \"react\";\r\nimport CourseCardComponent from \"./CourseCardComponent\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass CourseGridComponent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bg-light\">\r\n                <div className=\"row p-4\">\r\n                    <div className=\"col-6\">\r\n                        <h4>Recent Document</h4>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <h4>Owned By Me</h4>\r\n                    </div>\r\n\r\n                    <div className=\"col-1\">\r\n                        <i className=\"fa fa-sort-alpha-asc fa-2x\"/>\r\n                    </div>\r\n                    <div className=\"col-1\">\r\n                        <i className=\"fa fa-folder fa-2x\"/>\r\n                    </div>\r\n                    <div className=\"col-1\">\r\n                        <Link to=\"/courseTable\"><i className=\"fa fa-list fa-2x float-right text-dark\"></i></Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"container-fluid\">\r\n\r\n                    <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-6\">\r\n\r\n                        {this.props.courses.map((course, index) =>\r\n                            <div className=\"p-3\">\r\n                                <CourseCardComponent course={course} deleteCourse={this.props.deleteCourse} editCourse={this.props.editCourse}/>\r\n                            </div>\r\n                        )}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseGridComponent;","import React from \"react\";\r\n\r\nclass NavigationComponent extends React.Component {\r\n\r\n    state = {\r\n        defaultAddedCourse : {\r\n            title: \"New Course\",\r\n            owner: \"me\",\r\n            modified: new Date().toDateString()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <nav className=\"navbar  row\">\r\n                <div class=\"col-md-1 text-info\">\r\n                    <i className=\"fa fa-bars fa-2x \" href=\"#\"/>\r\n                </div>\r\n                <div className=\"col-md-3 text-info\">\r\n                    <h2>Course Manager</h2>\r\n                </div>\r\n                <div className=\"col-md-7  \">\r\n                    <input className=\"form-control\"\r\n                           placeholder=\"New Course\"\r\n                           onChange={\r\n                               (e) => {\r\n                                   const newTitle = e.target.value\r\n                                   this.setState(preState => (\r\n                                           {defaultAddedCourse: {...preState.defaultAddedCourse, title: newTitle}}\r\n                                       )\r\n                                   )\r\n                               }\r\n                           }\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-1 \">\r\n                    <i className=\"fa fa-plus-circle fa-4x float-right text-danger\" href=\"#\" onClick={() => {this.props.addCourse(this.state.defaultAddedCourse)}}/>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavigationComponent;","const coursesURL = \"http://wbdv-generic-server.herokuapp.com/api/001571524/courses\"\r\nconst modulesURL = \"http://wbdv-generic-server.herokuapp.com/api/001571524/modules\"\r\n\r\nexport const updateModule = (moduleId, newModule) =>\r\n    fetch(`${modulesURL}/${moduleId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(newModule),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteModule = (moduleId) =>\r\n    fetch(`${modulesURL}/${moduleId}`, {\r\n        method: \"DELETE\"\r\n    })\r\n        .then(response => response.json())\r\n\r\n//return a new module\r\nexport const createModuleForCourse = (courseId, newModule) =>\r\n    fetch(`${coursesURL}/${courseId}/modules`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newModule),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const findModulesForCourse = (courseId) =>\r\n    fetch(`${coursesURL}/${courseId}/modules`)\r\n        .then(response => response.json())\r\n\r\nexport default {createModuleForCourse, findModulesForCourse, deleteModule, updateModule}","import React from \"react\";\r\nimport {updateModule} from \"../services/ModuleService\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst ModuleListComponent = ({course, modules = [], createModuleForCourse, editModule, deleteModule, updateModule}) =>\r\n    <div>\r\n        <ul className=\"list-group\">\r\n            {\r\n                modules.map(module =>\r\n\r\n                    <li className={`${module.editing == true ? \"list-group-item active\" : \"list-group-item\"}`}>\r\n                        {\r\n                            !module.editing &&\r\n                            <span>\r\n                                <Link to={`/courseEditor/${course._id}/modules/${module._id}`}>\r\n                                    {module.title}\r\n                                </Link>\r\n                                <i className=\"fa fa-pencil fa-2x text-info float-right\"\r\n                                   onClick={() => editModule({...module, editing: true})}/>\r\n                            </span>\r\n                        }\r\n                        {\r\n                            module.editing &&\r\n                            <span>\r\n                                <input value={module.title}\r\n                                       onChange={(event) => editModule({...module, title: event.target.value})}/>\r\n                                <i className=\"fa fa-check fa-2x text-white float-right \"\r\n                                   onClick={() => updateModule({...module, editing: false})}/>\r\n                                <i className=\"fa fa-close fa-2x text-white float-right \"\r\n                                   onClick={() => deleteModule(module)}/>\r\n                            </span>\r\n                        }\r\n                    </li>\r\n                )\r\n            }\r\n            <li className=\"list-group-item \">\r\n                <i className=\"fa fa-plus fa-2x d-flex justify-content-center text-info\"\r\n                   onClick={() => createModuleForCourse(course)}/>\r\n            </li>\r\n        </ul>\r\n\r\n    </div>\r\n\r\n\r\nexport default ModuleListComponent","import ModuleListComponent from \"../components/ModuleListComponent\";\r\nimport {connect} from \"react-redux\";\r\nimport CourseService from \"../services/CourseService\";\r\nimport ModuleService from \"../services/ModuleService\";\r\n\r\n\r\nconst stateToPropsMapper = (state) => {\r\n   return (\r\n       {\r\n          modules: state.moduleReducer.modules,\r\n          course: state.courseReducer.course\r\n       }\r\n   )\r\n}\r\n\r\nconst dispatchToPropsMapper = (dispatch) =>{\r\n   return (\r\n       {\r\n           createModuleForCourse: (course) => ModuleService.createModuleForCourse(course._id,{title:\"New Module@\"})\r\n              .then(actualModule => dispatch({type:\"CREATE_MODULE_FOR_COURSE\", module:actualModule})),\r\n\r\n           editModule: (module) => dispatch({type:\"EDIT_MODULE\",module}),\r\n\r\n           deleteModule: (module) => ModuleService.deleteModule(module._id)\r\n               .then(status => dispatch({type:\"DELETE_MODULE\", module})),\r\n\r\n           updateModule: (module) => ModuleService.updateModule(module._id, module)\r\n               .then(status => dispatch({type:\"EDIT_MODULE\", module}))\r\n       }\r\n   )\r\n}\r\n\r\nexport default connect(stateToPropsMapper,dispatchToPropsMapper)(ModuleListComponent)","const moduleURL = \"http://wbdv-generic-server.herokuapp.com/api/001571524/modules\"\r\nconst lessonURL = \"https://wbdv-generic-server.herokuapp.com/api/001571524/lessons\"\r\n\r\nexport const updateLesson = (lesson) =>\r\n    fetch(`${lessonURL}/${lesson._id}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(lesson),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteLesson = (lessonId) =>\r\n    fetch(`${lessonURL}/${lessonId}`, {\r\n        method: \"DELETE\"\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const createLessonForModule = (moduleId, lesson) =>\r\n    fetch(`${moduleURL}/${moduleId}/lessons`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(lesson),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const findLessonsForModule = (moduleId) =>\r\n    fetch(`${moduleURL}/${moduleId}/lessons`)\r\n        .then(response => response.json())\r\n\r\nexport default {findLessonsForModule, createLessonForModule, deleteLesson, updateLesson}","import React from \"react\";\r\nimport {createLessonForModule} from \"../services/LessonService\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst LessonTabsComponent = ({course, moduleId, lessons = [], editLesson, updateLesson, deleteLesson, createLessonForModule}) =>\r\n\r\n    <ul className=\"nav nav-tabs\">\r\n        {\r\n            lessons.map(lesson =>\r\n                <li key={lesson._id} className=\"nav-item\">\r\n                    <div className=\"nav-link\">\r\n                        {\r\n                            !lesson.editing &&\r\n                            <span>\r\n                                <Link to={`/courseEditor/${course._id}/modules/${moduleId}/lessons/${lesson._id}`}>{lesson.title}</Link>\r\n                                <i className=\"fa fa-pencil ml-4 text-info\" onClick={() => {\r\n                                    editLesson({...lesson, editing: true})\r\n                                }}/>\r\n                            </span>\r\n                        }\r\n                        {\r\n                            lesson.editing &&\r\n                            <span>\r\n                                <input value={lesson.title} onChange={(event) => {\r\n                                    editLesson({...lesson, title: event.target.value})\r\n                                }}/>\r\n                                <i className=\"fa fa-check ml-2 text-info\" onClick={() => {\r\n                                    updateLesson({...lesson, editing: false})\r\n                                }}/>\r\n                                <i className=\"fa fa-close ml-2 text-info\" onClick={() => {\r\n                                    deleteLesson(lesson)\r\n                                }}/>\r\n                            </span>\r\n                        }\r\n\r\n                    </div>\r\n                </li>\r\n            )\r\n        }\r\n\r\n        <li className=\"nav-item\">\r\n            <div className=\"nav-link\">\r\n                <i className=\"fa fa-plus text-info\"\r\n                   onClick={() => {\r\n                       createLessonForModule(moduleId)\r\n                   }}/>\r\n            </div>\r\n        </li>\r\n\r\n    </ul>\r\n\r\nexport default LessonTabsComponent","import LessonTabsComponent from \"../components/LessonTabsComponent\";\r\nimport {connect} from \"react-redux\"\r\nimport LessonService from \"../services/LessonService\";\r\n\r\nconst stateToPropsMapper = (state) => {\r\n    return ({\r\n        lessons: state.lessonReducer.lessons,\r\n        moduleId: state.lessonReducer.moduleId,\r\n        course:state.courseReducer.course\r\n    })\r\n}\r\n\r\nconst dispatchToPropsMapper = (dispatch) => {\r\n    return ({\r\n        editLesson: (lesson) => dispatch({type: \"EDIT_LESSON\", lesson}),\r\n\r\n        updateLesson: (lesson) => LessonService.updateLesson(lesson)\r\n            .then(status => dispatch({type: \"EDIT_LESSON\", lesson})),\r\n\r\n        deleteLesson: (lesson) => LessonService.deleteLesson(lesson._id)\r\n            .then(status => dispatch({type: \"DELETE_LESSON\", lesson})),\r\n\r\n        createLessonForModule: (moduleId) => LessonService.createLessonForModule(moduleId, {title: \"COOL Lesson\"})\r\n            .then(actualLesson => dispatch({type: \"CREATE_LESSON_FOR_MODULE\", lesson: actualLesson}))\r\n    })\r\n}\r\n\r\n\r\nexport default connect(stateToPropsMapper, dispatchToPropsMapper)(LessonTabsComponent)\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst TopicPillsComponent = ({lessonId, topics = [], createTopicForLesson, editTopic, deleteTopic, updateTopic}) =>\r\n    <ul className=\"list-group\">\r\n        {\r\n            topics.map(topic =>\r\n                <li key={topic._id} className=\"list-group-item\">\r\n\r\n                    {\r\n                        !topic.editing &&\r\n                        <span>\r\n                            {topic.title}\r\n                            <i className=\"fa fa-pencil ml-4 text-info float-right\" onClick={() => {\r\n                                editTopic({...topic, editing: true})\r\n                            }}/>\r\n                        </span>\r\n                    }\r\n\r\n                    {\r\n                        topic.editing &&\r\n                        <span>\r\n                            <input value={topic.title} onChange={(event) => {\r\n                                editTopic({...topic, title: event.target.value})\r\n                            }}/>\r\n                            <i className=\"fa fa-check ml-4 text-info float-right\" onClick={() => {\r\n                                updateTopic({...topic, editing: false})\r\n                            }}/>\r\n                            <i className=\"fa fa-close ml-4 text-info float-right\" onClick={() => {\r\n                                deleteTopic(topic)\r\n                            }}/>\r\n                        </span>\r\n                    }\r\n\r\n\r\n                </li>\r\n            )\r\n        }\r\n        <li className=\"list-group-item \">\r\n            <i className=\"fa fa-plus fa-2x d-flex justify-content-center text-info\"\r\n               onClick={() => createTopicForLesson(lessonId)}/>\r\n        </li>\r\n    </ul>\r\n\r\n\r\nexport default TopicPillsComponent","const lessonUrl = \"https://wbdv-generic-server.herokuapp.com/api/001571524/lessons\"\r\nconst topicUrl = \"http://wbdv-generic-server.herokuapp.com/api/001571524/topics\"\r\n\r\nexport const findTopicsForLesson = (lessonId) =>\r\n    fetch(`${lessonUrl}/${lessonId}/topics`)\r\n        .then(response => response.json())\r\n\r\nexport const createTopicForLesson = (lessonId,topic) =>\r\n    fetch(`${lessonUrl}/${lessonId}/topics`,{\r\n        method: \"POST\",\r\n        body: JSON.stringify(topic),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    }).then(response => response.json())\r\n\r\nexport const deleteTopic =(topicId) =>\r\n    fetch(`${topicUrl}/${topicId}`,{\r\n        method:\"DELETE\"\r\n    }).then(response => response.json())\r\n\r\nexport const updateTopic =(topicId,newTopic) =>\r\n    fetch(`${topicUrl}/${topicId}`,{\r\n        method: \"PUT\",\r\n        body: JSON.stringify(newTopic),\r\n        headers: {\r\n            \"content-type\": \"application/json\"\r\n        }\r\n    }).then(response => response.json())\r\n\r\nexport default {\r\n    findTopicsForLesson,\r\n    createTopicForLesson,\r\n    deleteTopic,\r\n    updateTopic\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport TopicPillsComponent from \"../components/TopicPillsComponent\";\r\nimport TopicService from \"../services/TopicService\";\r\n\r\nconst stateToPropsMapper = (state) => {\r\n    return ({\r\n        topics: state.topicReducer.topics,\r\n        lessonId: state.topicReducer.lessonId\r\n    })\r\n}\r\n\r\nconst dispatchToPropsMapper = (dispatch) =>{\r\n    return({\r\n        createTopicForLesson: (lessonId) => TopicService.createTopicForLesson(lessonId,{title:\"New Topic\"})\r\n            .then(actualTopic => dispatch({type:\"CREATE_TOPIC_FOR_LESSON\", topic: actualTopic})),\r\n\r\n        editTopic : (topic) => dispatch({type:\"EDIT_TOPIC\",topic}),\r\n\r\n        deleteTopic: (topic) => TopicService.deleteTopic(topic._id)\r\n            .then(status => dispatch({type:\"DELETE_TOPIC\", topic})),\r\n\r\n        updateTopic: (topic) => TopicService.updateTopic(topic._id,topic)\r\n            .then(status => dispatch({type:\"EDIT_TOPIC\", topic}))\r\n    })\r\n}\r\nexport default connect(stateToPropsMapper,dispatchToPropsMapper)(TopicPillsComponent)","import React, {Component} from \"react\";\r\n\r\nimport ModuleListComponent from \"../containers/ModuleListContainer\";\r\nimport LessonTabsComponent from \"./LessonTabsComponent\";\r\nimport ModuleListContainer from \"../containers/ModuleListContainer\";\r\nimport LessonTabsContainer from \"../containers/LessonTabsContainer\";\r\nimport TopicPillsComponent from \"./TopicPillsComponent\";\r\nimport TopicPillsContainer from \"../containers/TopicPillsContainer\";\r\n\r\n\r\nclass CourseEditorComponent extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        //Get courseId using props.match.params.\r\n        const courseId = this.props.match.params.courseId\r\n        //console.log(\"couurseid\", courseId)\r\n\r\n        this.props.findCourseById(courseId)\r\n        //console.log(\"course:\", this.props.course)\r\n\r\n        this.props.findModulesForCourse(courseId)\r\n        // console.log(\"Modules:\",this.props.modules)\r\n\r\n        const moduleId = this.props.match.params.moduleId\r\n        //console.log(\"moduleId\", moduleId)\r\n\r\n        if (moduleId) {\r\n            this.props.findLessonsForModule(moduleId)\r\n        }\r\n\r\n        const lessonId = this.props.match.params.lessonId\r\n        if (lessonId) {\r\n            this.props.findTopicsForLesson(lessonId)\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const moduleId = this.props.match.params.moduleId\r\n        if (moduleId !== prevProps.match.params.moduleId) {\r\n            if (moduleId) {\r\n                this.props.findLessonsForModule(moduleId)\r\n            }\r\n        }\r\n        const lessonId = this.props.match.params.lessonId\r\n        if (lessonId !== prevProps.match.params.lessonId){\r\n            if(lessonId){\r\n                this.props.findTopicsForLesson(lessonId)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Course Editor {this.props.course.title}  </h1>\r\n                {/*<h2>{this.props.course.title}</h2>*/}\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        <ModuleListContainer/>\r\n                    </div>\r\n\r\n                    <div className=\"col-8\">\r\n                        <LessonTabsContainer/>\r\n                        <div className=\"my-5\">\r\n                            <TopicPillsContainer/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseEditorComponent\r\n\r\n\r\n","import React from \"react\";\r\nimport CourseEditorComponent from \"../components/CourseEditorComponent\";\r\nimport {connect} from \"react-redux\";\r\nimport ModuleService from \"../services/ModuleService\";\r\nimport CourseService from \"../services/CourseService\";\r\nimport LessonService from \"../services/LessonService\";\r\nimport TopicService from \"../services/TopicService\";\r\n\r\nconst stateToPropsMapper = (state) => {\r\n    return (\r\n        {\r\n            modules: state.moduleReducer.modules,\r\n            course: state.courseReducer.course,\r\n        }\r\n    )\r\n}\r\n\r\nconst dispatchToPropsMapper = (dispatch) => {\r\n    return (\r\n        {\r\n            //Get Current Page Course by id\r\n            // 1. use findCourseById(courseId) in CourseService to get Current Course\r\n            // 2. use dispatch() to invoke courseReducer to update course object state in courseReducer\r\n            // 3. get course state from store using state.courseReducer.course\r\n            findCourseById: (courseId) => {\r\n                CourseService.findCourseById(courseId)\r\n                    .then(course => dispatch({type: \"FIND_COURSE_BY_ID\", course}))\r\n            },\r\n\r\n            //Get modules by courseId\r\n            //  1. use findModulesForCourse(courseId) in ModuleService to get modules\r\n            //  2. use dispatch() to invoke moduleReducer to update modules object state in moduleReducer\r\n            //  3. get modules state from store using state.moduleReducer.modules\r\n            findModulesForCourse: (courseId) => {\r\n                ModuleService.findModulesForCourse(courseId)\r\n                    .then(modules => dispatch({type: \"FIND_MODULES_FOR_COURSE\", modules}))\r\n            },\r\n\r\n            findLessonsForModule: (moduleId) => {\r\n                LessonService.findLessonsForModule(moduleId)\r\n                    .then(lessons => dispatch({type: \"FIND_LESSONS_FOR_MODULE\", lessons, moduleId}))\r\n            },\r\n\r\n            findTopicsForLesson: (lessonId) =>{\r\n                TopicService.findTopicsForLesson(lessonId)\r\n                    .then(topics => dispatch({type:\"FIND_TOPICS_FOR_LESSON\", topics, lessonId}))\r\n            }\r\n\r\n        }\r\n    )\r\n}\r\n\r\nexport default connect(stateToPropsMapper, dispatchToPropsMapper)(CourseEditorComponent);","import React from \"react\";\r\nimport {findAllCourses, deleteCourse, createCourse, updateCourse} from \"../services/CourseService\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\"\r\nimport CourseTableComponent from \"./CourseTableComponent\";\r\nimport CourseGridComponent from \"./CourseGridComponent\";\r\nimport NavigationComponent from \"./NavigationComponent\";\r\nimport CourseEditorContainer from \"../containers/CourseEditorContainer\";\r\nimport CourseEditorComponent from \"./CourseEditorComponent\";\r\n\r\nclass CourseManager extends React.Component {\r\n\r\n    state = {\r\n        courses: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.findAllCourse()\r\n    }\r\n\r\n    findAllCourse = () => {\r\n        findAllCourses()\r\n            .then(courses => {\r\n                this.setState({courses: courses})\r\n            })\r\n    }\r\n    addCourse = (course) => {\r\n\r\n        createCourse(course)\r\n            .then(addedCourse => {\r\n                this.setState(preState => {\r\n                    return (\r\n                        {courses: [...preState.courses, addedCourse]}\r\n                    )\r\n                })\r\n            })\r\n    }\r\n\r\n    deleteCourse = (courseid) => {\r\n        deleteCourse(courseid)\r\n            .then(status => {\r\n                this.setState(preState => {\r\n                    return (\r\n                        {courses: preState.courses.filter(c => c._id !== courseid)}\r\n                    )\r\n                })\r\n            })\r\n    }\r\n\r\n    editCourse = (courseid, course) => {\r\n        updateCourse(courseid, course)\r\n            .then(status => {\r\n                this.findAllCourse()\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <BrowserRouter courses={this.state.courses}>\r\n\r\n                <div className=\"mx-auto\" style={{width: '80%'}}>\r\n                    <NavigationComponent addCourse={this.addCourse}/>\r\n                    <Route path=\"/\" exact>\r\n                        <CourseTableComponent courses={this.state.courses} deleteCourse={this.deleteCourse}\r\n                                              editCourse={this.editCourse}/>\r\n                    </Route>\r\n                    <Route path=\"/courseTable\">\r\n                        <CourseTableComponent courses={this.state.courses} deleteCourse={this.deleteCourse}\r\n                                              editCourse={this.editCourse}/>\r\n                    </Route>\r\n                    <Route path=\"/courseGrid\" exact>\r\n                        <CourseGridComponent courses={this.state.courses} deleteCourse={this.deleteCourse}\r\n                                             editCourse={this.editCourse}/>\r\n                    </Route>\r\n                    <Route path={[\"/courseEditor/:courseId\", \"/courseEditor/:courseId/modules/:moduleId\", \"/courseEditor/:courseId/modules/:moduleId/lessons/:lessonId\"]}\r\n                           exact component={CourseEditorContainer}></Route>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseManager;","const initialState = {\r\n    course:{\r\n        _id: \"\",\r\n        title: \"\"\r\n    }\r\n\r\n}\r\nconst courseReducer = (state=initialState, action) =>{\r\n    switch (action.type) {\r\n        case \"FIND_COURSE_BY_ID\":\r\n            return {\r\n                ...state,\r\n                course: action.course\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default courseReducer","const initialState = {\r\n    modules:[]\r\n}\r\n\r\n\r\nconst moduleReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"FIND_MODULES_FOR_COURSE\":\r\n            return {\r\n                ...state,\r\n                modules: action.modules\r\n            }\r\n        case \"CREATE_MODULE_FOR_COURSE\":\r\n            return {\r\n                ...state,\r\n                modules: [\r\n                    ...state.modules,\r\n                    action.module\r\n                ]\r\n            }\r\n        case \"EDIT_MODULE\":\r\n            return {\r\n                ...state,\r\n                modules: state.modules.map(module => module._id === action.module._id ? action.module: module)\r\n            }\r\n        case \"DELETE_MODULE\":\r\n            return {\r\n               ...state,\r\n               modules: state.modules.filter(module => module._id != action.module._id)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default moduleReducer","const initialState = {\r\n    lessons:[],\r\n    moduleId:\"\"\r\n}\r\n\r\nconst lessonReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n       case \"FIND_LESSONS_FOR_MODULE\":\r\n           return {\r\n               ...state,\r\n               lessons: action.lessons,\r\n               moduleId: action.moduleId\r\n           }\r\n       case \"EDIT_LESSON\":\r\n           return {\r\n               ...state,\r\n               lessons: state.lessons.map(lesson => lesson._id !== action.lesson._id ? lesson: action.lesson )\r\n           }\r\n       case \"DELETE_LESSON\":\r\n           return {\r\n               ...state,\r\n               lessons: state.lessons.filter(lesson => lesson._id != action.lesson._id)\r\n           }\r\n       case \"CREATE_LESSON_FOR_MODULE\":\r\n           return {\r\n               ...state,\r\n               lessons: [\r\n                   ...state.lessons,\r\n                   action.lesson\r\n               ]\r\n           }\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n\r\nexport default lessonReducer","const initialState = {\r\n    topics: [],\r\n    lessonId: \"\"\r\n}\r\n\r\nconst topicReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"FIND_TOPICS_FOR_LESSON\":\r\n            return {\r\n                ...state,\r\n                topics: action.topics,\r\n                lessonId: action.lessonId\r\n            }\r\n        case \"CREATE_TOPIC_FOR_LESSON\":\r\n            return {\r\n                ...state,\r\n                topics: [\r\n                    ...state.topics,\r\n                    action.topic\r\n                ]\r\n            }\r\n        case \"EDIT_TOPIC\":\r\n            return {\r\n                ...state,\r\n                topics: state.topics.map(topic => topic._id !== action.topic._id ? topic : action.topic)\r\n            }\r\n        case \"DELETE_TOPIC\":\r\n            return {\r\n                ...state,\r\n                topics: state.topics.filter(topic => topic._id !== action.topic._id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default topicReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport * as serviceWorker from './serviceWorker';\nimport CourseManager from \"./components/CourseManager\";\nimport {Provider} from \"react-redux\";\nimport {combineReducers, createStore} from \"redux\";\nimport courseReducer from \"./reducers/courseReducer\"\nimport moduleReducer from \"./reducers/moduleReducer\";\nimport lessonReducer from \"./reducers/lessonReducer\";\nimport topicReducer from \"./reducers/topicReducer\";\n\nconst reducers = combineReducers({\n    courseReducer,\n    moduleReducer,\n    lessonReducer,\n    topicReducer\n})\n\nconst store = createStore(reducers);\n\n\nReactDOM.render(\n    <Provider store={store} >\n        <CourseManager/>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}